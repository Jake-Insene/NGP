; --------------------------------------------
;              BINARY INSTRUCTIONS
; --------------------------------------------
; RDX = Register List
; R10 = Dest Index
; R11 = First Source
; R12 = Second Source
; R13 = Third Source

INCLUDE MacrosWIN64.inc

ADC_OPC:
    JMP CONTINUE_ADDRESS
SBC_OPC:
    JMP CONTINUE_ADDRESS
ADD_SHL_OPC:
    BINARY_OPERATION ADD, ShiftLeftValue
    JMP CONTINUE_ADDRESS
ADD_SHR_OPC:
    BINARY_OPERATION ADD, ShiftRightValue
    JMP CONTINUE_ADDRESS
ADD_ASR_OPC:
    BINARY_OPERATION ADD, AShiftRightValue
    JMP CONTINUE_ADDRESS
SUB_SHL_OPC:
    BINARY_OPERATION SUB, ShiftLeftValue
    JMP CONTINUE_ADDRESS
SUB_SHR_OPC:
    BINARY_OPERATION SUB, ShiftRightValue
    JMP CONTINUE_ADDRESS
SUB_ASR_OPC:
    BINARY_OPERATION SUB, AShiftRightValue
    JMP CONTINUE_ADDRESS
MUL_OPC:
    JMP CONTINUE_ADDRESS
UMUL_OPC:
    JMP CONTINUE_ADDRESS
DIV_OPC:
    JMP CONTINUE_ADDRESS
UDIV_OPC:
    JMP CONTINUE_ADDRESS
RSB_SHL_OPC:
    JMP CONTINUE_ADDRESS
RSB_SHR_OPC:
    JMP CONTINUE_ADDRESS
RSB_ASR_OPC:
    JMP CONTINUE_ADDRESS
MVN_SHL_OPC:
    MOV R14D, DWORD PTR[RDX+R11*4]
    SHIFT_REG R14, R13, ShiftLeftValue
    NOT R14
    MOV DWORD PTR[RDX+R10*4], R14D

    JMP CONTINUE_ADDRESS
MVN_SHR_OPC:
    MOV R14D, DWORD PTR[RDX+R11*4]
    SHIFT_REG R14, R13, ShiftRightValue
    NOT R14
    MOV DWORD PTR[RDX+R10*4], R14D

    JMP CONTINUE_ADDRESS
MVN_ASR_OPC:
    MOV R14D, DWORD PTR[RDX+R11*4]
    SHIFT_REG R14, R13, AShiftRightValue
    NOT R14
    MOV DWORD PTR[RDX+R10*4], R14D

    JMP CONTINUE_ADDRESS
MVN_ROR_OPC:
    MOV R14D, DWORD PTR[RDX+R11*4]
    SHIFT_REG R14, R13, RotateRightValue
    NOT R14
    MOV DWORD PTR[RDX+R10*4], R14D

    JMP CONTINUE_ADDRESS
AND_SHL_OPC:
    BINARY_OPERATION AND, ShiftLeftValue
    JMP CONTINUE_ADDRESS
AND_SHR_OPC:
    BINARY_OPERATION AND, ShiftRightValue
    JMP CONTINUE_ADDRESS
AND_ASR_OPC:
    BINARY_OPERATION AND, AShiftRightValue
    JMP CONTINUE_ADDRESS
OR_SHL_OPC:
    BINARY_OPERATION OR, ShiftLeftValue
    JMP CONTINUE_ADDRESS
OR_SHR_OPC:
    BINARY_OPERATION OR, ShiftRightValue
    JMP CONTINUE_ADDRESS
OR_ASR_OPC:
    BINARY_OPERATION OR, AShiftRightValue
    JMP CONTINUE_ADDRESS
ORN_SHL_OPC:
    MOV R14D, DWORD PTR[RDX+R11*4]
    MOV R15D, DWORD PTR[RDX+R12*4]
    SHIFT_REG R15, R13, ShiftLeftValue
    
    NOT R15D
    OR R14, R15
    MOV DWORD PTR [RDX+R10*4], R14D

    JMP CONTINUE_ADDRESS
ORN_SHR_OPC:
    MOV R14D, DWORD PTR[RDX+R11*4]
    MOV R15D, DWORD PTR[RDX+R12*4]
    SHIFT_REG R15, R13, ShiftRightValue
    
    NOT R15D
    OR R14D, R15D
    MOV DWORD PTR [RDX+R10*4], R14D

    JMP CONTINUE_ADDRESS
ORN_ASR_OPC:
    MOV R14D, DWORD PTR[RDX+R11*4]
    MOV R15D, DWORD PTR[RDX+R12*4]
    SHIFT_REG R15, R13, AShiftRightValue
    
    NOT R15D
    OR R14D, R15D
    MOV DWORD PTR [RDX+R10*4], R14D

    JMP CONTINUE_ADDRESS
EOR_SHL_OPC:
    BINARY_OPERATION XOR, ShiftLeftValue
    JMP CONTINUE_ADDRESS
EOR_SHR_OPC:
    BINARY_OPERATION XOR, ShiftRightValue
    JMP CONTINUE_ADDRESS
EOR_ASR_OPC:
    BINARY_OPERATION XOR, AShiftRightValue
    JMP CONTINUE_ADDRESS
SHL_OPC:
    MOV R14D, DWORD PTR[RDX+R11*4]
    MOV R15D, DWORD PTR[RDX+R12*4]

    SHIFT_REG R14, R15, ShiftLeftValue
    MOV DWORD PTR [RDX+R10*4], R14D
    
    JMP CONTINUE_ADDRESS
SHR_OPC:
    MOV R14D, DWORD PTR[RDX+R11*4]
    MOV R15D, DWORD PTR[RDX+R12*4]

    SHIFT_REG R14, R15, ShiftRightValue
    MOV DWORD PTR [RDX+R10*4], R14D

    JMP CONTINUE_ADDRESS
ASR_OPC:
    MOV R14D, DWORD PTR[RDX+R11*4]
    MOV R15D, DWORD PTR[RDX+R12*4]

    SHIFT_REG R14, R15, AShiftRightValue
    MOV DWORD PTR [RDX+R10*4], R14D

    JMP CONTINUE_ADDRESS
ROR_OPC:
    MOV R14D, DWORD PTR[RDX+R11*4]
    MOV R15D, DWORD PTR[RDX+R12*4]

    SHIFT_REG R14, R15, RotateRightValue
    MOV DWORD PTR [RDX+R10*4], R14D

    JMP CONTINUE_ADDRESS
ADDS_SHL_OPC:
    MOV ECX, DWORD PTR[RDX+R11*4]
    MOV EDX, DWORD PTR[RDX+R12*4]
    SHIFT_REG RDX, R13, ShiftLeftValue
    
    CALL compare_add

    RESTORE_ARGS
    MOV DWORD PTR [RDX+R10*4], EAX

    JMP CONTINUE_ADDRESS
ADDS_SHR_OPC:
    MOV ECX, DWORD PTR[RDX+R11*4]
    MOV EDX, DWORD PTR[RDX+R12*4]
    SHIFT_REG RDX, R13, ShiftRightValue
    
    CALL compare_add

    RESTORE_ARGS
    MOV DWORD PTR [RDX+R10*4], EAX

    JMP CONTINUE_ADDRESS
ADDS_ASR_OPC:
    MOV ECX, DWORD PTR[RDX+R11*4]
    MOV EDX, DWORD PTR[RDX+R12*4]
    SHIFT_REG RDX, R13, AShiftRightValue
    
    CALL compare_add

    RESTORE_ARGS
    MOV DWORD PTR [RDX+R10*4], EAX

    JMP CONTINUE_ADDRESS
SUBS_SHL_OPC:
    MOV ECX, DWORD PTR[RDX+R11*4]
    MOV EDX, DWORD PTR[RDX+R12*4]
    SHIFT_REG RDX, R13, ShiftLeftValue
    
    CALL compare

    RESTORE_ARGS
    MOV DWORD PTR [RDX+R10*4], EAX

    JMP CONTINUE_ADDRESS
SUBS_SHR_OPC:
    MOV ECX, DWORD PTR[RDX+R11*4]
    MOV EDX, DWORD PTR[RDX+R12*4]
    SHIFT_REG RDX, R13, ShiftRightValue
    
    CALL compare

    RESTORE_ARGS
    MOV DWORD PTR [RDX+R10*4], EAX

    JMP CONTINUE_ADDRESS
SUBS_ASR_OPC:
    MOV ECX, DWORD PTR[RDX+R11*4]
    MOV EDX, DWORD PTR[RDX+R12*4]
    SHIFT_REG RDX, R13, AShiftRightValue
    
    CALL compare

    RESTORE_ARGS
    MOV DWORD PTR [RDX+R10*4], EAX

    JMP CONTINUE_ADDRESS
ANDS_SHL_OPC:
    MOV ECX, DWORD PTR[RDX+R11*4]
    MOV EDX, DWORD PTR[RDX+R12*4]
    SHIFT_REG RDX, R13, ShiftLeftValue
    
    CALL compare_and

    RESTORE_ARGS
    MOV DWORD PTR [RDX+R10*4], EAX

    JMP CONTINUE_ADDRESS
ANDS_SHR_OPC:
    MOV ECX, DWORD PTR[RDX+R11*4]
    MOV EDX, DWORD PTR[RDX+R12*4]
    SHIFT_REG RDX, R13, ShiftRightValue
    
    CALL compare_and

    RESTORE_ARGS

    MOV DWORD PTR [RDX+R10*4], EAX

    JMP CONTINUE_ADDRESS
ANDS_ASR_OPC:
    MOV ECX, DWORD PTR[RDX+R11*4]
    MOV EDX, DWORD PTR[RDX+R12*4]
    SHIFT_REG RDX, R13, AShiftRightValue
    
    CALL compare_and

    RESTORE_ARGS
    MOV DWORD PTR [RDX+R10*4], EAX

    JMP CONTINUE_ADDRESS
MADD_OPC:
    JMP CONTINUE_ADDRESS
MSUB_OPC:
    JMP CONTINUE_ADDRESS
UMADD_OPC:
    JMP CONTINUE_ADDRESS
UMSUB_OPC:
    JMP CONTINUE_ADDRESS
SHL_IMMEDIATE_OPC:
    MOV R14D, DWORD PTR[RDX+R11*4]
    SHIFT_REG R14, R13, ShiftLeftValue
    MOV DWORD PTR [RDX+R10*4], R14D

    JMP CONTINUE_ADDRESS
SHR_IMMEDIATE_OPC:
    MOV R14D, DWORD PTR[RDX+R11*4]
    SHIFT_REG R14, R13, ShiftRightValue
    MOV DWORD PTR [RDX+R10*4], R14D

    JMP CONTINUE_ADDRESS
ASR_IMMEDIATE_OPC:
    MOV R14D, DWORD PTR[RDX+R11*4]
    SHIFT_REG R14, R13, AShiftRightValue
    MOV DWORD PTR [RDX+R10*4], R14D

    JMP CONTINUE_ADDRESS
ROR_IMMEDIATE_OPC:
    MOV R14D, DWORD PTR[RDX+R11*4]
    SHIFT_REG R14, R13, RotateRightValue
    MOV DWORD PTR [RDX+R10*4], R14D

    JMP CONTINUE_ADDRESS
CMP_SHL_OPC:
    MOV ECX, DWORD PTR[RDX+R11*4]
    MOV EDX, DWORD PTR[RDX+R12*4]
    SHIFT_REG RDX, R13, ShiftLeftValue
    
    CALL compare

    RESTORE_ARGS

    JMP CONTINUE_ADDRESS
CMP_SHR_OPC:
    MOV ECX, DWORD PTR[RDX+R11*4]
    MOV EDX, DWORD PTR[RDX+R12*4]
    SHIFT_REG RDX, R13, ShiftRightValue
    
    CALL compare

    RESTORE_ARGS

    JMP CONTINUE_ADDRESS
CMP_ASR_OPC:
    MOV ECX, DWORD PTR[RDX+R11*4]
    MOV EDX, DWORD PTR[RDX+R12*4]
    SHIFT_REG RDX, R13, AShiftRightValue
    
    CALL compare

    RESTORE_ARGS

    JMP CONTINUE_ADDRESS
CMN_SHL_OPC:
    MOV ECX, DWORD PTR[RDX+R11*4]
    MOV EDX, DWORD PTR[RDX+R12*4]
    SHIFT_REG RDX, R13, ShiftLeftValue
    
    CALL compare_add

    RESTORE_ARGS

    JMP CONTINUE_ADDRESS
CMN_SHR_OPC:
    MOV ECX, DWORD PTR[RDX+R11*4]
    MOV EDX, DWORD PTR[RDX+R12*4]
    SHIFT_REG RDX, R13, ShiftRightValue
    
    CALL compare_add

    RESTORE_ARGS

    JMP CONTINUE_ADDRESS
CMN_ASR_OPC:
    MOV ECX, DWORD PTR[RDX+R11*4]
    MOV EDX, DWORD PTR[RDX+R12*4]
    SHIFT_REG RDX, R13, AShiftRightValue
    
    CALL compare_add

    RESTORE_ARGS

    JMP CONTINUE_ADDRESS
TST_SHL_OPC:
    MOV ECX, DWORD PTR[RDX+R11*4]
    MOV EDX, DWORD PTR[RDX+R12*4]
    SHIFT_REG RDX, R13, ShiftLeftValue
    
    CALL compare_and

    RESTORE_ARGS

    JMP CONTINUE_ADDRESS
TST_SHR_OPC:
    MOV ECX, DWORD PTR[RDX+R11*4]
    MOV EDX, DWORD PTR[RDX+R12*4]
    SHIFT_REG RDX, R13, ShiftRightValue
    
    CALL compare_and

    RESTORE_ARGS

    JMP CONTINUE_ADDRESS
TST_ASR_OPC:
    MOV ECX, DWORD PTR[RDX+R11*4]
    MOV EDX, DWORD PTR[RDX+R12*4]
    SHIFT_REG RDX, R13, AShiftRightValue
    
    CALL compare_and

    RESTORE_ARGS

    JMP CONTINUE_ADDRESS
LD_OPC:
    JMP CONTINUE_ADDRESS
LDSH_OPC:
    JMP CONTINUE_ADDRESS
LDH_OPC:
    JMP CONTINUE_ADDRESS
LDSB_OPC:
    JMP CONTINUE_ADDRESS
LDB_OPC:
    JMP CONTINUE_ADDRESS
ST_OPC:
    JMP CONTINUE_ADDRESS
STH_OPC:
    JMP CONTINUE_ADDRESS
STB_OPC:
    JMP CONTINUE_ADDRESS
ABS_OPC:
    JMP CONTINUE_ADDRESS

